# -*- coding: utf-8 -*-
"""Copy of R Semester Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bp4CE6xcaV7JY5DV0fwWeGgpyAXRWHpT
"""

# Suppressing warnings
options(warn=-1)

#Loading the Libraries
library(tidyverse)
library(ggplot2)

# install.packages("caret")
# library(caret)

# install.packages("plotly")
# library(plotly)

# Reading CSV file
df <- read.csv("heart.csv")

# Displaying information about the dataframe
str(df)

df$sex = factor(df$sex)
df$cp = factor(df$cp)
df$restecg = factor(df$restecg)
df$exng = factor(df$exng)
df$thall = factor(df$thall)

# Checking for missing values
print(colSums(is.na(df)))

# Checking for duplicated rows
print(sum(duplicated(df)))

# Displaying duplicated rows
print(df[duplicated(df), ])

# Removing duplicated rows
df <- df[!duplicated(df), ]

# Displaying the updated dataframe shape
print(dim(df))

# # Displaying value counts for each column NR
# for (col in colnames(df)) {
#   cat("Column: ", col, "\n")
#   print(table(df[[col]]))
# }

str(df)

tail(df)

head(df)

# Displaying summary statistics
print(summary(df))

# Load necessary libraries
library(ggplot2)
install.packages("corrplot")
library(corrplot)
library(tidyverse)

# Load the CSV file
# df <- read.csv("heart.csv")

# Boxplot of PhysicalHealth
boxplot_drawer <- function(Column_Name) {
  ggplot(df, aes(y = !!sym(Column_Name))) +
    geom_boxplot() +
    labs(title = paste("Boxplot of", Column_Name))
}
print(boxplot_drawer)

# Remove outliers
Remove_outliers <- function(Column_Name) {
  q1 <- quantile(df[[Column_Name]], 0.25)
  q3 <- quantile(df[[Column_Name]], 0.75)
  iqr <- q3 - q1
  df[[Column_Name]][(df[[Column_Name]] < (q1 - 1.5 * iqr)) | (df[[Column_Name]] > (q3 + 1.5 * iqr))] <- NA
}

# Check for null values
print(colSums(is.na(df)))

# Drop rows with NA values
df <- na.omit(df)

df$output

str(df)

ggplot(df, aes(x = output)) +
  geom_bar(fill = c("#ADD8E6", "#FFA07A"), color = "#2b2b2b") +  # Light blue and light red colors
  labs(title = "Bar Plot of Target Variable by Group", y = "Rate", x = "Group") +  # Adding labels
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),  # Centering the title
    panel.grid.major = element_blank(),  # Removing major grid lines
    panel.grid.minor = element_blank(),  # Removing minor grid lines
    panel.border = element_blank(),  # Removing the panel border
    axis.line = element_line(color = "black")  # Adding axis line
  )

ggplot(df, aes(x = age)) +
  geom_bar(fill = "#3498db", color = "#2b2b2b", alpha = 0.8) +  # Customizing bar chart colors
  labs(title = "Bar Plot of Target Variable by Age", y = "Rate", x = "Age") +  # Adding labels
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),  # Centering the title
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotating x-axis labels for better readability
  ) +
  scale_x_continuous(breaks = seq(25, 90, by = 5))

ggplot(df, aes(x = as.factor(sex), y = age, fill = sex)) +
  geom_boxplot() +
  labs(title = "Boxplot of Age by Sex", y = "Age", x = "Sex") +
  scale_fill_manual(values = c("#ADD8E6", "#FFA07A")) +  # Light blue for male, light red for female
  theme_minimal()

ggplot(df, aes(x = sex)) +
  geom_bar(fill = c("pink", "lightblue"), color = "#2b2b2b") +
  labs(title = "Bar Plot of Sex", y = "Count", x = "Sex") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),  # Centering the title
    panel.grid.major = element_blank(),  # Removing major grid lines
    panel.grid.minor = element_blank(),  # Removing minor grid lines
    panel.border = element_blank(),  # Removing the panel border
    axis.line = element_line(color = "black")  # Adding axis line
  )

ggplot(df, aes(x = cp, fill = cp)) +
  geom_bar() +
  labs(title = "Distribution of Chest Pain Types", y = "Count", x = "Chest Pain Type") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5)  # Centering the title
  )

# Assuming df is your data frame and age is the "age" column, output is the "output" column
library(ggplot2)

ggplot(df, aes(x = factor(output), y = age, color = factor(sex))) +
  geom_point(size = 3, alpha = 0.7) +
  labs(title = "Age Distribution by Heart Attack Risk", y = "Age", x = "Heart Attack Risk") +
  scale_color_manual(values = c("#1F78B4", "#E41A1C")) +  # Blue for 0, Red for 1
  theme_minimal()

# Load necessary libraries
library(ggplot2)

# Create a boxplot
ggplot(df, aes(x = factor(cp), y = chol, fill = factor(cp))) +
  geom_boxplot() +
  labs(title = "Cholesterol Levels by Chest Pain Type", y = "Cholesterol Level", x = "Chest Pain Type") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3")) +  # Custom colors for each chest pain type
  theme_minimal()

# Create a boxplot
ggplot(df, aes(x = factor(sex), y = chol, fill = factor(sex))) +
  geom_boxplot() +
  labs(title = "Cholesterol Levels by Gender", y = "Cholesterol Level", x = "Gender") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62")) +  # Custom colors for each gender
  theme_minimal()

# Numeric features
numeric_features <- c('age', 'trtbps', 'chol', 'thalachh', 'oldpeak')

# Create a histogram
par(mfrow=c(2, 3))  # Setting up a 2x3 grid for subplots
for (feature in numeric_features) {
  hist(df[[feature]], main = paste("Histogram of", feature), xlab = feature, col = "#87CEEB", border = "black", breaks = 15)
}

install.packages("GGally")

# Create a violin plot with ggplot2
ggplot(df, aes(x = factor(cp), y = age, fill = factor(output), color = factor(output))) +
  geom_violin(trim = FALSE, scale = "width") +
  labs(title = "Age vs. Chest Pain Type with Heart Disease", x = "Chest Pain Type", y = "Age") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62")) +  # Custom colors for output
  scale_color_manual(values = c("#66c2a5", "#fc8d62")) +  # Custom colors for output
  theme_minimal()

# Create a histogram with ggplot2
ggplot(df, aes(x = age, fill = ..count..)) +
  geom_histogram(binwidth = 5, color = 'white', position = 'identity') +
  labs(title = 'Age Distribution', x = 'Age', y = 'Frequency') +
  theme_minimal()

# Create a Bar Plot
ggplot(df, aes(x = sex, fill = factor(output))) +
  geom_bar(position = "dodge", color = "black") +
  labs(title = "Distribution of Heart Disease by Gender", x = "Gender", y = "Count") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62")) +  # Custom colors for each output level
  theme_minimal()

#Age vs. Resting Blood Pressure (Trtbps):
ggplot(df, aes(x = age, y = trtbps, color = factor(output))) +
  geom_point() +
  geom_smooth(method = "glm", se = FALSE, color = "blue") +
  labs(title = "Age vs. Resting Blood Pressure", color = "Heart Attack") +
  theme_minimal()

#Serum Cholesterol Level (Chol) vs. Maximum Heart Rate (Thalachh)
ggplot(df, aes(x = chol, y = thalachh, color = factor(output))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Cholesterol vs. Max Heart Rate", color = "Heart Attack") +
  theme_minimal()

#Chest Pain Type (Cp) vs. Exercise-Induced Angina (Exng)
ggplot(df, aes(x = factor(cp), y = factor(exng), color = factor(output))) +
  geom_point() +
  labs(title = "Chest Pain Type vs. Exercise-Induced Angina", color = "Heart Attack") +
  theme_minimal()

#Number of Major Vessels (Caa) vs. ST Depression (Oldpeak)
ggplot(df, aes(x = factor(caa), y = oldpeak, color = factor(output))) +
  geom_point() +
  labs(title = "Number of Major Vessels vs. ST Depression", color = "Heart Attack") +
  theme_minimal()

#Resting Electrocardiographic Results (Restecg) vs. Maximum Heart Rate (Thalach)
ggplot(df, aes(x = factor(restecg), y = thalachh, color = factor(output))) +
  geom_point() +
  labs(title = "Resting Electrocardiographic Results vs. Max Heart Rate", color = "Heart Attack") +
  theme_minimal()

# Set the size of the plot
options(repr.plot.width=8, repr.plot.height=6)

# Assuming 'output' is a binary outcome variable (0 or 1)

# Create the logistic regression scatter plot
logistic_plot <- ggplot(df, aes(x = age, y = thalachh, color = factor(output))) +
  geom_point() +
  geom_smooth(method = "glm", method.args = list(family = "binomial"), se = FALSE, color = "blue") +
  labs(x = 'Age', y = 'Max Heart Rate (thalachh)', title = 'Age vs. Max Heart Rate') +
  scale_color_manual(values = c("0" = "green", "1" = "purple")) +
  theme_minimal()

# Print the logistic regression scatter plot
print(logistic_plot)

#Age Box Plot
ggplot(df, aes(x = "", y = age, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of Age by Heart Attack Status", x = "", y = "Age") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

#Resting Blood Pressure (Trestbps) Box Plot
ggplot(df, aes(x = "", y = trtbps, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of Resting Blood Pressure by Heart Attack Status", x = "", y = "Resting Blood Pressure") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

#Serum Cholesterol Level (Chol) Box Plot
ggplot(df, aes(x = "", y = chol, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of Serum Cholesterol Level by Heart Attack Status", x = "", y = "Serum Cholesterol Level") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

#Maximum Heart Rate Achieved (Thalach) Box Plot
ggplot(df, aes(x = "", y = thalachh, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of Maximum Heart Rate Achieved by Heart Attack Status", x = "", y = "Max Heart Rate") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

#ST Depression Induced by Exercise (Oldpeak) Box Plot
ggplot(df, aes(x = "", y = oldpeak, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of ST Depression Induced by Exercise by Heart Attack Status", x = "", y = "ST Depression") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

#Number of Major Vessels Colored by Fluoroscopy (Ca) Box Plot
ggplot(df, aes(x = "", y = caa, fill = factor(output))) +
  geom_boxplot() +
  labs(title = "Boxplot of Number of Major Vessels Colored by Fluoroscopy by Heart Attack Status", x = "", y = "Number of Vessels") +
  theme_minimal() +
  scale_fill_manual(values = c("0" = "lightcoral", "1" = "lightskyblue"))

# Assuming df is your data frame
library(ggplot2)

# Create a boxplot
ggplot(df, aes(x = sex, y = chol, fill = sex)) +
  geom_boxplot(color = "black", outlier.shape = NA) +  # Hide outliers for better visibility
  labs(title = "Cholesterol Level by Sex", x = "Sex", y = "Cholesterol Level") +
  theme_minimal()

# Load necessary libraries
library(ggplot2)

# Load the CSV file
df <- read.csv("heart.csv")

# Box plot for Age by Gender
ggplot(df, aes(x = as.factor(sex), y = age, fill = as.factor(sex))) +
  geom_boxplot() +
  labs(x = "Gender", y = "Age", title = "Box Plot of Age by Gender") +
  theme_minimal() +
  scale_fill_manual(values = c("#FF9999", "#66B2FF"))

# Box plot for Resting Blood Pressure by Chest Pain Type
ggplot(df, aes(x = as.factor(cp), y = trtbps, fill = as.factor(cp))) +
  geom_boxplot() +
  labs(x = "Chest Pain Type", y = "Resting Blood Pressure", title = "Box Plot of Resting Blood Pressure by Chest Pain Type") +
  theme_minimal() +
  scale_fill_manual(values = c("#FFCC99", "#99FF99", "#9999FF", "#FF9999"))

# Box plot for Serum Cholesterol Level by Heart Attack Risk
ggplot(df, aes(x = as.factor(output), y = chol, fill = as.factor(output))) +
  geom_boxplot() +
  labs(x = "Heart Attack Risk", y = "Serum Cholesterol Level", title = "Box Plot of Serum Cholesterol Level by Heart Attack Risk") +
  theme_minimal() +
  scale_fill_manual(values = c("#FF9999", "#99FF99"))



# Box plot for Maximum Heart Rate by Exercise-Induced Angina
ggplot(df, aes(x = as.factor(exng), y = thalachh, fill = as.factor(exng))) +
  geom_boxplot() +
  labs(x = "Exercise-Induced Angina", y = "Maximum Heart Rate", title = "Box Plot of Maximum Heart Rate by Exercise-Induced Angina") +
  theme_minimal() +
  scale_fill_manual(values = c("#FF9999", "#99FF99"))

# Box plot for ST Depression by Slope of the Peak Exercise ST Segment
ggplot(df, aes(x = as.factor(slp), y = oldpeak, fill = as.factor(slp))) +
  geom_boxplot() +
  labs(x = "Slope of Peak Exercise ST Segment", y = "ST Depression", title = "Box Plot of ST Depression by Slope of Peak Exercise ST Segment") +
  theme_minimal() +
  scale_fill_manual(values = c("#FFCC99", "#99FF99", "#9999FF"))

#Age Distribution by Gender
ggplot(df, aes(x = age, fill = factor(sex))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'Age Distribution by Gender', x = 'Age', y = 'Frequency', fill = 'Gender') +
  theme_minimal()

#Resting Blood Pressure Distribution by Chest Pain Type
ggplot(df, aes(x = trtbps, fill = factor(cp))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'Resting Blood Pressure Distribution by Chest Pain Type', x = 'Resting Blood Pressure', y = 'Frequency', fill = 'Chest Pain Type') +
  theme_minimal()

#Serum Cholesterol Level by Heart Disease Status
ggplot(df, aes(x = chol, fill = factor(output))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'Serum Cholesterol Level by Heart Disease Status', x = 'Serum Cholesterol Level', y = 'Frequency', fill = 'Heart Disease Status') +
  theme_minimal()

#Maximum Heart Rate Achieved by Exercise-Induced Angina
ggplot(df, aes(x = thalachh, fill = factor(exng))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'Maximum Heart Rate Achieved by Exercise-Induced Angina', x = 'Maximum Heart Rate Achieved', y = 'Frequency', fill = 'Exercise-Induced Angina') +
  theme_minimal()

#ST Depression by Thalassemia Type
ggplot(df, aes(x = oldpeak, fill = factor(thall))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'ST Depression by Thalassemia Type', x = 'ST Depression', y = 'Frequency', fill = 'Thalassemia Type') +
  theme_minimal()

#Number of Major Vessels Colored by Fluoroscopy by Heart Disease Status
ggplot(df, aes(x = caa, fill = factor(output))) +
  geom_histogram(position = "dodge", bins = 20, color = 'white') +
  labs(title = 'Number of Major Vessels Colored by Fluoroscopy by Heart Disease Status', x = 'Number of Vessels', y = 'Frequency', fill = 'Heart Disease Status') +
  theme_minimal()

#Thalassemia Distribution by Gender
ggplot(df, aes(x = factor(thall), fill = factor(sex))) +
  geom_bar(position = "dodge") +
  labs(title = 'Thalassemia Distribution by Gender', x = 'Thalassemia Type', y = 'Count', fill = 'Gender') +
  theme_minimal()

#Heart Disease Distribution by Chest Pain Type
ggplot(df, aes(x = factor(cp), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(title = 'Heart Disease Distribution by Chest Pain Type', x = 'Chest Pain Type', y = 'Count', fill = 'Heart Disease Status') +
  theme_minimal()

# Load necessary libraries
library(ggplot2)
library(dplyr)

# Load the CSV file
df <- read.csv("heart.csv")

# Set a colorful theme
theme_set(theme_minimal() +
            theme(text = element_text(color = 'darkblue'),
                  axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                  panel.grid.major = element_line(color = 'lightgray'),
                  panel.grid.minor = element_line(color = 'lightgray')))


# List of variables to create density plots for
variables <- c('age', 'trtbps', 'chol', 'thalachh', 'oldpeak', 'caa', 'thall', 'cp', 'slp', 'thall', 'output')

# Set up a color palette
color_palette <- c('0' = 'lightcoral', '1' = 'lightskyblue')

# Create density plots using a for loop
for (variable in variables) {
  a <- ggplot(df, aes(x = get(variable), fill = factor(output))) +
    geom_density(alpha = 0.7) +
    labs(title = paste('Density Plot for', variable), x = variable, fill = 'Heart Disease') +
    scale_fill_manual(values = color_palette)
  print(a)
}

# Assuming df is your dataset
cor_matrix <- cor(df[, c("age", "trtbps", "chol", "thalachh", "oldpeak")])

# Print the correlation matrix
print(cor_matrix)

install.packages("corrplot")
# Load the corrplot library
library(corrplot)

# Create a correlation matrix
cor_matrix <- cor(df[, c("age", "trtbps", "chol", "thalachh", "oldpeak")])

# Plot a correlation heatmap
corrplot(cor_matrix, method = "color")

# Install and load the corrplot library
if (!requireNamespace("corrplot", quietly = TRUE)) {
  install.packages("corrplot")
}
library(corrplot)

# Create a correlation matrix
cor_matrix <- cor(df[, c("age", "trtbps", "chol", "thalachh", "oldpeak")])

# Plot a correlation heatmap with numerical values inside the matrix
corrplot(cor_matrix, method = "color", addCoef.col = "black", tl.col = "black")

# Assuming df is your dataset
# Make sure to install and load the corrplot library
install.packages("corrplot")
library(corrplot)

# Create a correlation matrix
cor_matrix <- cor(df[, c("age", "trtbps", "chol", "thalachh", "oldpeak")])

# Plot a correlation heatmap with numbers
corrplot(cor_matrix, method = "number", order = "hclust", addCoef.col = "black", tl.col = "black")

# Assuming df is your dataset
# Make sure to install and load the corrplot library
install.packages("corrplot")
library(corrplot)

# Create a correlation matrix
cor_matrix <- cor(df[, c("age", "trtbps", "chol", "thalachh", "oldpeak")])

# Plot a correlation heatmap with colored cells
corrplot(cor_matrix, method = "color", type = "upper", order = "hclust", addCoef.col = "black", tl.col = "black", col = colorRampPalette(c("#B2182B", "#D6604D", "#F4A582", "#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC"))(100))

install.packages("ggplot2")

library(ggplot2)


#Boxplot of Age by Gender
ggplot(df, aes(x = factor(sex), y = age, fill = factor(sex))) +
  geom_boxplot() +
  labs(x = 'Gender', y = 'age', title = 'Boxplot of Age by Gender') +
  scale_fill_manual(values = c('skyblue', 'pink'))

install.packages("viridis")

library(viridis)


#Boxplot of Resting Blood Pressure by Chest Pain Type
ggplot(df, aes(x = factor(cp), y = trtbps, fill = factor(cp))) +
  geom_boxplot() +
  labs(x = 'Chest Pain Type', y = 'Resting Blood Pressure', title = 'Boxplot of Resting Blood Pressure by Chest Pain Type') +
  scale_fill_brewer(palette = 'Set2')

#Boxplot of Serum Cholesterol Level by Fasting Blood Sugar
ggplot(df, aes(x = factor(fbs), y = chol, fill = factor(fbs))) +
  geom_boxplot() +
  labs(x = 'Fasting Blood Sugar', y = 'Serum Cholesterol Level', title = 'Boxplot of Serum Cholesterol Level by Fasting Blood Sugar') +
  scale_fill_manual(values = c('lightcoral', 'lightskyblue'))

#Boxplot of Maximum Heart Rate by Exercise-Induced Angina
ggplot(df, aes(x = factor(exng), y = thalachh, fill = factor(exng))) +
  geom_boxplot() +
  labs(x = 'Exercise-Induced Angina', y = 'Maximum Heart Rate', title = 'Boxplot of Maximum Heart Rate by Exercise-Induced Angina') +
  scale_fill_manual(values = c('lightcoral', 'lightskyblue'))

#Boxplot of ST Depression by Thalassemia Results
ggplot(df, aes(x = factor(thall), y = oldpeak, fill = factor(thall))) +
  geom_boxplot() +
  labs(x = 'Thalassemia Results', y = 'ST Depression', title = 'Boxplot of ST Depression by Thalassemia Results') +
  scale_fill_viridis(discrete = TRUE)

#Boxplot of Resting Blood Pressure by Heart Attack Risk
ggplot(df, aes(x = factor(output), y = trtbps, fill = factor(output))) +
  geom_boxplot() +
  labs(x = 'Heart Attack Risk', y = 'Resting Blood Pressure', title = 'Boxplot of Resting Blood Pressure by Heart Attack Risk') +
  scale_fill_manual(values = c('lightcoral', 'lightskyblue'))

#Bar Plot: Gender Distribution by Heart Disease
ggplot(df, aes(x = factor(sex), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Gender', y = 'Count', title = 'Distribution of Heart Disease by Gender') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Chest Pain Type Distribution by Heart Disease
ggplot(df, aes(x = factor(cp), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Chest Pain Type', y = 'Count', title = 'Distribution of Heart Disease by Chest Pain Type') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Fasting Blood Sugar Distribution by Heart Disease
ggplot(df, aes(x = factor(fbs), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Fasting Blood Sugar', y = 'Count', title = 'Distribution of Heart Disease by Fasting Blood Sugar') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Resting Electrocardiographic Results Distribution by Heart Disease
ggplot(df, aes(x = factor(restecg), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Resting ECG Results', y = 'Count', title = 'Distribution of Heart Disease by Resting ECG Results') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Exercise-Induced Angina Distribution by Heart Disease
ggplot(df, aes(x = factor(exng), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Exercise-Induced Angina', y = 'Count', title = 'Distribution of Heart Disease by Exercise-Induced Angina') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Slope of the Peak Exercise ST Segment Distribution by Heart Disease
ggplot(df, aes(x = factor(slp), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Slope of ST Segment', y = 'Count', title = 'Distribution of Heart Disease by Slope of ST Segment') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Thalassemia Distribution by Heart Disease
ggplot(df, aes(x = factor(thall), fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Thalassemia', y = 'Count', title = 'Distribution of Heart Disease by Thalassemia') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

#Bar Plot: Age Group Distribution by Heart Disease
df$age_group <- cut(df$age, breaks = seq(29, 77, by = 5))
ggplot(df, aes(x = age_group, fill = factor(output))) +
  geom_bar(position = "dodge") +
  labs(x = 'Age Group', y = 'Count', title = 'Distribution of Heart Disease by Age Group') +
  scale_fill_manual(values = c('0' = 'lightcoral', '1' = 'lightskyblue'))

# Assuming df is your data frame
library(ggplot2)

# Contingency table for Sex and Output
sex_output_table <- table(df$sex, df$output)

# Print the contingency table
print(sex_output_table)

# Heatmap for Sex and Output
ggplot(df, aes(x = sex, y = output, fill = ..count..)) +
  geom_tile() +
  labs(title = "Contingency Table Heatmap: Sex vs. Output", x = "Sex", y = "Output") +
  theme_minimal()

# Contingency table for CP (Chest Pain Type) and Output
cp_output_table <- table(df$cp, df$output)

# Print the contingency table
print(cp_output_table)

# Heatmap for CP (Chest Pain Type) and Output
ggplot(df, aes(x = factor(cp), y = output, fill = ..count..)) +
  geom_tile() +
  labs(title = "Contingency Table Heatmap: Chest Pain Type vs. Output", x = "Chest Pain Type", y = "Output") +
  theme_minimal()

# Selecting only the categorical variables for the heatmap
categorical_data <- df[, c("sex", "cp", "fbs", "restecg", "slp", "caa", "thall", "output")]

# Convert categorical variables to factors for better labeling
categorical_data[] <- lapply(categorical_data, as.factor)

# Create a heatmap
ggplot(categorical_data, aes(x = 1, y = seq_along(categorical_data), fill = sex)) +
  geom_tile() +
  theme_minimal() +
  theme(axis.text.x = element_blank(), axis.text.y = element_text(size = 8, face = "bold")) +
  labs(title = "Heatmap of Categorical Variables", fill = "sex") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62"))  # Custom colors for sex

color_theme <- colorRampPalette(c('darkred', 'red', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Age and Resting Blood Pressure (Trestbps)
ggplot(df, aes(x = age, y = trtbps)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Age vs. Resting Blood Pressure', x = 'Age', y = 'Resting Blood Pressure (Trestbps)')

color_theme <- colorRampPalette(c('darkred', 'red', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Age and Resting Blood Pressure (Trestbps)
ggplot(df, aes(x = age, y = trtbps)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Age vs. Resting Blood Pressure', x = 'Age', y = 'Resting Blood Pressure (Trestbps)')

color_theme <- colorRampPalette(c('darkorange', 'orange', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

#Heatmap for Serum Cholesterol Level (Chol) and Max Heart Rate (Thalach)

ggplot(df, aes(x = chol, y = thalachh)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Serum Cholesterol Level (Chol) vs Max Heart Rate (Thalach)', x = 'Cholesterol', y = 'Max Heart Rate')



color_theme <- colorRampPalette(c('darkgreen', 'green', 'lightgreen', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Chest Pain Type (Cp) and ST Depression (Oldpeak)

ggplot(df, aes(x = cp, y = oldpeak)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Chest Pain Type (Cp) vs ST Depression (Oldpeak)', x = 'Chest Pain Type', y = 'ST Depression')

# Heatmap for Chest Pain Type (Cp) and ST Depression (Oldpeak)
ggplot(df, aes(x = as.factor(cp), y = oldpeak, fill = ..density..)) +
  geom_bin2d(bins = 20) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Chest Pain Type vs. ST Depression', x = 'Chest Pain Type', y = 'ST Depression (Oldpeak)')

color_theme <- colorRampPalette(c('darkgreen', 'green', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Resting ECG Results (Restecg) and Exercise-Induced Angina (Exang)

ggplot(df, aes(x = restecg, y = exng)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Resting ECG Results vs Exercise-Induced Angina', x = 'Resting ECG', y = 'Exercise-Induced Angina')

color_theme <- colorRampPalette(c('darkblue', 'blue', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Number of Major Vessels (Ca) and Slope of ST Segment (Slope)


ggplot(df, aes(x = caa, y = slp)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Number of Major Vessels vs Slope of ST Segment', x = 'RestingNumber of Major Vessels', y = 'Slope of ST Segment')

color_theme <- colorRampPalette(c('darkblue', 'blue', 'lightcoral', 'lightsalmon', 'mistyrose'))(50)

# Heatmap for Thalassemia (Thal) and Target Variable

ggplot(df, aes(x = thall, y = output)) +
  geom_tile(aes(fill = ..density..),stat="density2d",alpha=1) +
  scale_fill_gradientn(colors = color_theme) +
  labs(title = 'Heatmap: Thalassemia vs Target Variable', x = 'Maximum heart rate achieved', y = 'Output')

str(df)

mod <- glm(output~trtbps+chol+thalachh+oldpeak,df, family = "binomial")

summary(mod)

pre2 <- data.frame(trtbps=130,chol=236,thalachh=174,oldpeak=0.0)

predict(mod,pre2)

# Assuming df is your dataset
# You may need to adjust the column names based on your actual dataset

# Convert categorical variables to factors
df$sex <- factor(df$sex)
df$cp <- factor(df$cp)
df$thall <- factor(df$thall)
df$output <- factor(df$output)

# # Perform logistic regression
logistic_model <- glm(output ~ ., data = df, family = "binomial")

# # Display summary of the logistic regression model
summary(logistic_model)

head(df)

tail(df)

a <- lm(output~trtbps+chol+thalachh+oldpeak,data=df)
print("==========================================")
attributes(a)
print("==========================================")
summary(a)

pre <- data.frame(trtbps=130,chol=131,thalachh=115,oldpeak=1.2)
predict(mod,pre)

model <- glm(output~trtbps+chol+thalachh+oldpeak,data=df,family = "binomial")
print("==========================================")
attributes(model)
print("==========================================")
summary(model)

forlm <- data.frame(trtbps=110,chol=264,thalachh=132,oldpeak=	1.2)
predict(a,forlm)

forlm1 <- data.frame(trtbps=140,chol=192,thalachh=148,oldpeak=0.4)
predict(a,forlm1)

predict(model,forlm)
predict(model,forlm1)

# 3	41	Female	Atypical Angina	130	204	FALSE	Normal	172	No	1.4	2	0	Fixed Defect	1
pre2 <- data.frame(trtbps=130,chol=204,thalachh=172,oldpeak=1.4)
# 298	59	Male	Typical Angina	164	176	TRUE	Normal	90	No	1.0	1	2	Normal	0
pre1 <- data.frame(trtbps=164,chol=176,thalachh=90,oldpeak=1.0)

predict(model,pre2)
predict(model,pre1)

predict(a,pre2)
predict(a,pre1)

summary(logistic_model)

# Convert categorical variables to factors
df$sex <- as.factor(df$sex)
df$cp <- as.factor(df$cp)
df$fbs <- as.factor(df$fbs)
df$restecg <- as.factor(df$restecg)
df$exng <- as.factor(df$exng)
df$slp <- as.factor(df$slp)
df$caa <- as.factor(df$caa)
df$thall <- as.factor(df$thall)
df$output <- as.factor(df$output)

# Fit logistic regression model
logistic <- glm(output ~ ., data = df, family = "binomial")

# Display the summary of the model
summary(logistic)

# 299	57	Female	Typical Angina	140	241	FALSE	STT Wave	123	Yes	0.2	1	0	Reversable Defect	0
# age	sex	cp	trtbps	chol	fbs	restecg	thalachh	exng	oldpeak	slp	caa	thall
# abc <- data.frame(age=57,sex="Female",cp="Typical Angina",trtbps=140,chol=241,fbs=FALSE,restecg="STT Wave",thalachh=123,exng="Yes",oldpeak=0.2,slp=1,caa=0,thall="Reversable Defect")
# abc$sex <- as.factor(abc$sex)
# abc$cp <- as.factor(abc$cp)
# abc$fbs <- as.factor(abc$fbs)
# abc$restecg <- as.factor(abc$restecg)
# abc$exng <- as.factor(abc$exng)
# abc$slp <- as.factor(abc$slp)
# abc$caa <- as.factor(abc$caa)
# abc$thall <- as.factor(abc$thall)
# abc$output <- as.factor(abc$output)
abc <- df[11, , drop = FALSE]
predict(logistic,abc)













